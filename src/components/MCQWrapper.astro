---

---

<script is:inline>
      // This single script will manage ALL MCQs on the page.
      document.addEventListener("click", (event) => {
            // We only care about clicks on our specific button
            const checkBtn = (event.target as HTMLElement).closest(
                  ".check-answer-btn"
            );
            if (!checkBtn) return;

            // Find the parent container for the MCQ this button belongs to
            const container = checkBtn.closest(".mcq-container");
            if (!container) return;

            // The button has already been processed, so we stop.
            if (checkBtn.hasAttribute("disabled")) {
                  return;
            }

            // Retrieve the question data, which we will embed in the HTML
            const questionDataEl = container.querySelector(
                  '[type="application/json"]'
            );
            if (!questionDataEl) return;
            const question = JSON.parse(questionDataEl.textContent || "{}");

            const correctAnswers = new Set(
                  Array.isArray(question.correct)
                        ? question.correct
                        : [question.correct]
            );

            const optionsList = container.querySelector(".options-list");
            const explanationBox = container.querySelector(".explanation-box");
            const inputs = container.querySelectorAll("input");

            if (!optionsList || !explanationBox) return;

            const selectedInputs = Array.from(
                  container.querySelectorAll("input:checked")
            );
            const selectedIndices = new Set(
                  selectedInputs.map((input) => parseInt(input.value, 10))
            );

            let isFullyCorrect =
                  selectedIndices.size === correctAnswers.size &&
                  [...selectedIndices].every((index) =>
                        correctAnswers.has(index)
                  );

            explanationBox.classList.remove("hidden");
            if (isFullyCorrect) {
                  explanationBox.classList.add(
                        "border-green-400",
                        "bg-green-50",
                        "dark:bg-green-900/50",
                        "text-green-800",
                        "dark:text-green-200"
                  );
            } else {
                  explanationBox.classList.add(
                        "border-red-400",
                        "bg-red-50",
                        "dark:bg-red-900/50",
                        "text-red-800",
                        "dark:text-red-200"
                  );
            }

            checkBtn.setAttribute("disabled", "true");
            inputs.forEach((input) => input.setAttribute("disabled", "true"));

            optionsList.querySelectorAll("li").forEach((li, index) => {
                  const label = li.querySelector(".option-label");
                  if (!label) return;

                  const isCorrect = correctAnswers.has(index);
                  const isSelected = selectedIndices.has(index);

                  label.classList.remove(
                        "has-[:checked]:bg-blue-50",
                        "dark:has-[:checked]:bg-blue-900/50",
                        "has-[:checked]:border-blue-400"
                  );

                  if (isCorrect) {
                        label.classList.add(
                              "bg-green-100",
                              "dark:bg-green-900/50",
                              "border-green-400"
                        );
                  } else if (isSelected && !isCorrect) {
                        label.classList.add(
                              "bg-red-100",
                              "dark:bg-red-900/50",
                              "border-red-400"
                        );
                  } else {
                        label.classList.add("opacity-70");
                  }
            });
      });
</script>
