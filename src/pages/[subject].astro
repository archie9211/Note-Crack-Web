---
import { getCollection, type CollectionEntry } from "astro:content";
import { collections } from "../content/config.mjs";
import ArticleLayout from "../layouts/ArticleLayout.astro";
import ArticleNav from "../components/ArticleNav.astro";
import MobileToggles from "../components/MobileToggles.astro";
import ForceUpdateButton from "../components/ForceUpdateButton.astro";
import { buildNavigationTree } from "../lib/navigation";

// This page now handles ALL top-level collections.
// NO getStaticPaths is needed because this is a server-rendered "catch-all".

const { subject } = Astro.params;

// 1. --- VALIDATION ---
// Check if the requested subject is a valid collection. If not, show a 404.
if (!subject || !collections.hasOwnProperty(subject)) {
      return new Response("Collection not found", { status: 404 });
}

// 2. --- DETERMINE PAGE TYPE ---
// We check if this is a notes page or an MCQ page based on the name.
const isMcqPage = subject.endsWith("-mcqs");

// 3. --- DYNAMICALLY SET PAGE TITLE ---
const formatName = (slug: string) => slug.replace(/-/g, " ");
const pageTitle = isMcqPage
      ? `${formatName(subject.replace("-mcqs", ""))} MCQs`
      : `${formatName(subject)} Notes`;

// 4. --- BUILD NAVIGATION & FETCH CONTENT ---
const navTree = await buildNavigationTree();
type CollectionName = keyof typeof collections;
type NoteEntry = CollectionEntry<CollectionName>;
const entries: NoteEntry[] = await getCollection(subject as any);
const topicsByClass: { [className: string]: any[] } = {};

for (const entry of entries) {
      const [className] = entry.slug.split("/");
      if (!topicsByClass[className]) {
            topicsByClass[className] = [];
      }
      topicsByClass[className].push(entry);
}

// 5. --- CONFIGURE NAVIGATION PROPS ---
// The currentSubject is always the full name from the URL, which now works
// because our navTree builder includes all subjects.
const navProps = {
      navTree: navTree,
      currentSubject: subject,
      currentTopicSlug: "",
};
---

<ArticleLayout>
      <!-- Left Sidebar (Desktop) -->
      <div slot="left-sidebar">
            <ArticleNav {...navProps} />
      </div>

      <!-- Content for the slide-out mobile nav drawer -->
      <div slot="mobile-nav-drawer">
            <ArticleNav {...navProps} />
      </div>

      <!-- Main Content Area -->
      <div slot="main-content">
            <div
                  class="border-b border-gray-200 dark:border-gray-700 pb-3 mb-6"
            >
                  <h1 class="text-3xl lg:text-4xl font-bold capitalize">
                        {pageTitle}
                  </h1>
            </div>

            <div class="space-y-10">
                  {
                        Object.keys(topicsByClass).length === 0 &&
                              navProps.currentSubject.endsWith("mcqs") && (
                                    <p class="text-gray-500">
                                          No MCQs has been added for this
                                          subject yet.
                                    </p>
                              )
                  }
                  {
                        Object.keys(topicsByClass).length === 0 &&
                              !navProps.currentSubject.endsWith("mcqs") && (
                                    <p class="text-gray-500">
                                          No content has been added for this
                                          section yet.
                                    </p>
                              )
                  }
                  {
                        Object.entries(topicsByClass).map(
                              ([className, topics]) => (
                                    <section>
                                          <h2 class="text-2xl font-bold mb-4 capitalize border-b border-gray-200 dark:border-gray-700 pb-2">
                                                {formatName(className)}
                                          </h2>
                                          <ul class="space-y-4 list-none pl-0">
                                                {topics.map((entry) => (
                                                      <li>
                                                            <a
                                                                  href={`/notes/${subject}/${entry.slug}`}
                                                                  class="block p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-800 transition-all group hover:border-blue-500 dark:hover:border-blue-500"
                                                            >
                                                                  <h3 class="text-xl font-semibold text-blue-600 dark:text-blue-400 group-hover:underline">
                                                                        {
                                                                              entry
                                                                                    .data
                                                                                    .title
                                                                        }
                                                                  </h3>
                                                                  <p class="text-gray-600 dark:text-gray-400 mt-1">
                                                                        {
                                                                              entry
                                                                                    .data
                                                                                    .description
                                                                        }
                                                                  </p>
                                                            </a>
                                                      </li>
                                                ))}
                                          </ul>
                                    </section>
                              )
                        )
                  }
            </div>

            <ForceUpdateButton />
      </div>

      <!-- Mobile Toggle Buttons: Show ONLY the "Menu" button -->
      <div slot="mobile-toggles">
            <MobileToggles showMenuToggle={true} />
      </div>
</ArticleLayout>
