---
import { getEntry, getCollection } from "astro:content";
import ArticleLayout from "../../layouts/ArticleLayout.astro";
import ArticleNav from "../../components/ArticleNav.astro";
import TableOfContents from "../../components/TableOfContents.astro";
import MobileToggles from "../../components/MobileToggles.astro";
import PrevNextNav from "../../components/PrevNextNav.astro";
import ForceUpdateButton from "../../components/ForceUpdateButton.astro";
import MCQ from "../../components/MCQ.astro";
import ShowAllAnswers from "../../components/ShowAllAnswers.astro";
import { buildNavigationTree } from "../../lib/navigation";
import MCQWrapper from "../../components/MCQWrapper.astro";

const { slug } = Astro.params;
if (!slug) return new Response("Not Found", { status: 404 });

const slugParts = slug.split("/");
const subjectSlug = slugParts[0];
const topicSlugWithClass = slugParts.slice(1).join("/"); // e.g., 'class-12/topic-name'
const className = slugParts[1];

const entry = await getEntry(subjectSlug, topicSlugWithClass);
if (!entry) return new Response("Article not found", { status: 404 });

const { Content, headings } = await entry.render();
const hasHeadings = headings.length > 0;
const mcqs = entry.data.mcqs;

// --- KEY CHANGES ---
// 1. Build the full navigation tree for the sidebar
const navTree = await buildNavigationTree();

// 2. Find previous/next topic *within the same class*
const topicsInCurrentClass = navTree[subjectSlug]?.[className] ?? [];
const currentIndex = topicsInCurrentClass.findIndex(
      (topic) => topic.slug === topicSlugWithClass
);

const prevTopic =
      currentIndex > 0 ? topicsInCurrentClass[currentIndex - 1] : undefined;
const nextTopic =
      currentIndex < topicsInCurrentClass.length - 1
            ? topicsInCurrentClass[currentIndex + 1]
            : undefined;

// Props for the navigation component
const navProps = {
      navTree: navTree,
      currentSubject: subjectSlug,
      currentTopicSlug: topicSlugWithClass,
};
---

<ArticleLayout>
      <!-- Left Sidebar (Desktop) -->
      <div slot="left-sidebar">
            <ArticleNav {...navProps} />
      </div>

      <!-- Content for the slide-out mobile nav drawer -->
      <div slot="mobile-nav-drawer">
            <ArticleNav {...navProps} />
      </div>

      <!-- Main Content Area -->
      <div slot="main-content">
            <article class="prose prose-neutral dark:prose-invert max-w-none">
                  <div class="mb-8 text-center">
                        <p
                              class="text-sm font-semibold uppercase tracking-wider text-blue-600 dark:text-blue-400 capitalize"
                        >
                              {subjectSlug.replace("-", " ")}
                        </p>
                        <h1 class="text-4xl font-extrabold my-2">
                              {entry.data.title}
                        </h1>
                        <p class="text-lg text-gray-500 dark:text-gray-400">
                              {entry.data.description}
                        </p>
                  </div>
                  <hr class="my-8" />
                  <Content />
            </article>
            {
                  mcqs && mcqs.length > 0 && (
                        <section class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
                              <h2 class="text-2xl font-bold mb-6">
                                    Test Your Knowledge
                              </h2>
                              <MCQWrapper />

                              {mcqs.map((question, index) => (
                                    <MCQ question={question} index={index} />
                              ))}
                              <ShowAllAnswers />
                        </section>
                  )
            }
            <PrevNextNav
                  prev={prevTopic && {
                        url: `/notes/${subjectSlug}/${prevTopic.slug}`,
                        title: prevTopic.title,
                  }}
                  next={nextTopic && {
                        url: `/notes/${subjectSlug}/${nextTopic.slug}`,
                        title: nextTopic.title,
                  }}
            />
            <ForceUpdateButton />
      </div>

      <!-- Right Sidebar (Desktop) -->
      <div slot="right-sidebar">
            {hasHeadings && <TableOfContents headings={headings} />}
      </div>

      <!-- Mobile Table of Contents (Drawer) -->
      <div slot="mobile-toc">
            {hasHeadings && <TableOfContents headings={headings} />}
      </div>

      <!-- Mobile Toggle Buttons: Show BOTH buttons -->
      <div slot="mobile-toggles">
            <MobileToggles showMenuToggle={true} showTocToggle={hasHeadings} />
      </div>
</ArticleLayout>
