---
import { getCollection, getEntry } from "astro:content";
import { collections } from "../../content/config.mjs";
import ArticleLayout from "../../layouts/ArticleLayout.astro";
import ArticleNav from "../../components/ArticleNav.astro";
import TableOfContents from "../../components/TableOfContents.astro";
import MobileToggles from "../../components/MobileToggles.astro";
import PrevNextNav from "../../components/PrevNextNav.astro"; // <-- Import new component

export async function getStaticPaths() {
      const paths = [];
      const subjects = Object.keys(collections);
      for (const subject of subjects) {
            const entries = await getCollection(subject);
            for (const entry of entries) {
                  paths.push({ params: { slug: `${subject}/${entry.slug}` } });
            }
      }
      return paths;
}

const { slug } = Astro.params;
if (!slug) return new Response("Not Found", { status: 404 });

const slugParts = slug.split("/");
const subjectSlug = slugParts[0];
const topicSlug = slugParts.slice(1).join("/");

const entry = await getEntry(subjectSlug, topicSlug);
if (!entry) return new Response("Article not found", { status: 404 });

const { Content, headings } = await entry.render();
const allSubjects = Object.keys(collections);
const hasHeadings = headings.length > 0;

// Get all topics in the current subject to find prev/next
const topicsInCurrentSubject = await getCollection(subjectSlug);
const currentIndex = topicsInCurrentSubject.findIndex(
      (topic) => topic.slug === topicSlug
);

const prevTopic =
      currentIndex > 0 ? topicsInCurrentSubject[currentIndex - 1] : undefined;
const nextTopic =
      currentIndex < topicsInCurrentSubject.length - 1
            ? topicsInCurrentSubject[currentIndex + 1]
            : undefined;

const navProps = {
      allSubjects: allSubjects,
      currentSubject: subjectSlug,
      topicsInCurrentSubject: topicsInCurrentSubject,
      currentTopicSlug: topicSlug,
};
---

<ArticleLayout>
      <!-- Left Sidebar (Desktop) -->
      <div slot="left-sidebar">
            <ArticleNav {...navProps} />
      </div>

      <!-- ** NEW: Content for the slide-out mobile nav drawer ** -->
      <div slot="mobile-nav-drawer">
            <ArticleNav {...navProps} />
      </div>

      <!-- Main Content Area -->
      <div slot="main-content">
            <article class="prose prose-neutral dark:prose-invert max-w-none">
                  <div class="mb-8 text-center">
                        <p
                              class="text-sm font-semibold uppercase tracking-wider text-blue-600 dark:text-blue-400 capitalize"
                        >
                              {subjectSlug.replace("-", " ")}
                        </p>
                        <h1 class="text-4xl font-extrabold my-2">
                              {entry.data.title}
                        </h1>
                        <p class="text-lg text-gray-500 dark:text-gray-400">
                              {entry.data.description}
                        </p>
                  </div>
                  <hr class="my-8" />
                  <Content />
            </article>
            <PrevNextNav
                  prev={prevTopic && {
                        url: `/notes/${subjectSlug}/${prevTopic.slug}`,
                        title: prevTopic.data.title,
                  }}
                  next={nextTopic && {
                        url: `/notes/${subjectSlug}/${nextTopic.slug}`,
                        title: nextTopic.data.title,
                  }}
            />
      </div>

      <!-- Right Sidebar (Desktop) -->
      <div slot="right-sidebar">
            {hasHeadings && <TableOfContents headings={headings} />}
      </div>

      <!-- Mobile Table of Contents (Drawer) -->
      <div slot="mobile-toc">
            {hasHeadings && <TableOfContents headings={headings} />}
      </div>

      <!-- Mobile Toggle Buttons: Show BOTH buttons -->
      <div slot="mobile-toggles">
            <MobileToggles showMenuToggle={true} showTocToggle={hasHeadings} />
      </div>
</ArticleLayout>
